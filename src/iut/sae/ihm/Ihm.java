package iut.sae.ihm;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import iut.sae.structureDonnees.TNoeud;
import iut.sae.fichier.Entree;
import iut.sae.fonctions.Fonctions;

import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.ArrayList;
import java.util.LinkedList;

/**
 * Cette classe nous permet de gérer toute la partie IHM du projet
 * @author Noah Michel et Aurelyen Morel
 * @version 1.0
 */
public class Ihm extends javax.swing.JFrame {

    private Dessin dessin;
    private Fonctions fonctionnalite;
    private LinkedList<TNoeud> listeNoeud;

    /**
     * Creates new form MainFrame
     */
    public Ihm(){
        initComponents();
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setVisible(true);
        this.pack();
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        comparerBoutonGroup = new javax.swing.ButtonGroup();
        proprietePanel = new javax.swing.JPanel();
        optionPanel = new javax.swing.JPanel();
        afficherLbl = new javax.swing.JLabel();
        typeNoeudPanel = new javax.swing.JPanel();
        villeCb = new javax.swing.JCheckBox();
        autoCb = new javax.swing.JCheckBox();
        restauCb = new javax.swing.JCheckBox();
        departCb = new javax.swing.JCheckBox();
        loisirCb = new javax.swing.JCheckBox();
        natioCb = new javax.swing.JCheckBox();
        distance1Lbl = new javax.swing.JLabel();
        distance1Panel = new javax.swing.JPanel();
        distance1Cbb = new javax.swing.JComboBox<>();
        departDistance1Lbl = new javax.swing.JLabel();
        distance1Cb = new javax.swing.JCheckBox();
        separateurDistance1 = new javax.swing.JSeparator();
        distance2Lbl = new javax.swing.JLabel();
        distance2Panel = new javax.swing.JPanel();
        distance2Cb = new javax.swing.JCheckBox();
        departDistance2Lbl = new javax.swing.JLabel();
        distance2Cbb = new javax.swing.JComboBox<>();
        separateurDistance2 = new javax.swing.JSeparator();
        comparerPanel = new javax.swing.JPanel();
        pointALbl = new javax.swing.JLabel();
        pointBLbl = new javax.swing.JLabel();
        pointACbb = new javax.swing.JComboBox<>();
        pointBCbb = new javax.swing.JComboBox<>();
        culturelRb = new javax.swing.JRadioButton();
        gastronomiqueRb = new javax.swing.JRadioButton();
        ouvertRb = new javax.swing.JRadioButton();
        comparerbouton = new javax.swing.JButton();
        graphicPanel = new javax.swing.JPanel();
        barreMenu = new javax.swing.JMenuBar();
        fichierMenu = new javax.swing.JMenu();
        outilsMenu = new javax.swing.JMenu();
        ouvrirMenuItem = new javax.swing.JMenuItem();
        separateurMenu = new javax.swing.JPopupMenu.Separator();
        quitterMenuItem = new javax.swing.JMenuItem();
        legendePanel = new javax.swing.JPanel();
        legendeAutoPanel = new javax.swing.JPanel();
        legendeDepartPanel = new javax.swing.JPanel();
        legendeNatioPanel = new javax.swing.JPanel();
        legendeLoisPanel = new javax.swing.JPanel();
        legendeRestauPanel = new javax.swing.JPanel();
        legendeVillePanel = new javax.swing.JPanel();
        legendeVilleLbl = new JLabel();
        legendeRestaurantLbl = new JLabel();
        legendeLoisirLbl = new JLabel();
        legendeAutoLbl = new JLabel();
        legendeDepartLbl = new JLabel();
        legendeNatioLbl = new JLabel();
        nbrElem = new javax.swing.JMenuItem();
        listerNoeud = new javax.swing.JMenuItem();
        listerLien = new javax.swing.JMenuItem();
        distance2OuPas = new JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        proprietePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        proprietePanel.setForeground(new java.awt.Color(204, 204, 204));
        proprietePanel.setPreferredSize(new java.awt.Dimension(340, 572));

        optionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Options"));
        optionPanel.setLayout(new java.awt.GridLayout(3, 2, -112, 0));

        afficherLbl.setBackground(new java.awt.Color(255, 255, 255));
        afficherLbl.setText("Afficher:");
        optionPanel.add(afficherLbl);

        typeNoeudPanel.setLayout(new java.awt.GridLayout(3, 2));

        villeCb.setSelected(true);
        villeCb.setText("Villes");
        villeCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                affichageCbActionPerformed(evt);
            }
        });
        typeNoeudPanel.add(villeCb);

        autoCb.setSelected(true);
        autoCb.setText("Autoroutes");
        autoCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                affichageCbActionPerformed(evt);
            }
        });
        typeNoeudPanel.add(autoCb);

        restauCb.setSelected(true);
        restauCb.setText("Restaurants");
        restauCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                affichageCbActionPerformed(evt);
            }
        });
        typeNoeudPanel.add(restauCb);

        departCb.setSelected(true);
        departCb.setText("Départementales");
        departCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                affichageCbActionPerformed(evt);
            }
        });
        typeNoeudPanel.add(departCb);

        loisirCb.setSelected(true);
        loisirCb.setText("Loisirs");
        loisirCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                affichageCbActionPerformed(evt);
            }
        });
        typeNoeudPanel.add(loisirCb);

        natioCb.setSelected(true);
        natioCb.setText("Nationales");
        natioCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                affichageCbActionPerformed(evt);
            }
        });
        typeNoeudPanel.add(natioCb);

        optionPanel.add(typeNoeudPanel);

        distance1Lbl.setText("1-distance:");
        optionPanel.add(distance1Lbl);

        distance1Cbb.setModel(modeleDistance1);
        distance1Cbb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                distance1CbbActionPerformed(evt);
            }
        });

        departDistance1Lbl.setText("Départ:");

        distance1Cb.setText("Afficher");
        distance1Cb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    distance1CbActionPerformed(evt);
                }catch (NullPointerException ignored){}
            }
        });

        separateurDistance1.setForeground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout distance1PanelLayout = new javax.swing.GroupLayout(distance1Panel);
        distance1Panel.setLayout(distance1PanelLayout);
        distance1PanelLayout.setHorizontalGroup(
                distance1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(separateurDistance1)
                        .addGroup(distance1PanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(departDistance1Lbl)
                                .addGap(18, 18, 18)
                                .addGroup(distance1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(distance1PanelLayout.createSequentialGroup()
                                                .addComponent(distance1Cb)
                                                .addContainerGap(69, Short.MAX_VALUE))
                                        .addGroup(distance1PanelLayout.createSequentialGroup()
                                                .addComponent(distance1Cbb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(14, 14, 14))))
        );
        distance1PanelLayout.setVerticalGroup(
                distance1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(distance1PanelLayout.createSequentialGroup()
                                .addComponent(separateurDistance1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(distance1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(departDistance1Lbl)
                                        .addComponent(distance1Cbb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(distance1Cb)
                                .addContainerGap(25, Short.MAX_VALUE))
        );

        optionPanel.add(distance1Panel);

        distance2Lbl.setText("2-distance:");
        distance2Lbl.setMaximumSize(new java.awt.Dimension(20, 16));
        distance2Lbl.setMinimumSize(new java.awt.Dimension(20, 16));
        distance2Lbl.setPreferredSize(new java.awt.Dimension(20, 16));
        optionPanel.add(distance2Lbl);

        distance2Cb.setText("Afficher");
        distance2Cb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try{
                    distance2CbActionPerformed(evt);
                }catch (NullPointerException ignored){}
            }
        });

        departDistance2Lbl.setText("Départ:");

        distance2Cbb.setModel(modeleDistance2);
        distance2Cbb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                distance2CbbActionPerformed(evt);
            }
        });

        separateurDistance2.setForeground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout distance2PanelLayout = new javax.swing.GroupLayout(distance2Panel);
        distance2Panel.setLayout(distance2PanelLayout);
        distance2PanelLayout.setHorizontalGroup(
                distance2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(separateurDistance2)
                        .addGroup(distance2PanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(departDistance2Lbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(distance2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(distance2PanelLayout.createSequentialGroup()
                                                .addComponent(distance2Cb)
                                                .addContainerGap(75, Short.MAX_VALUE))
                                        .addGroup(distance2PanelLayout.createSequentialGroup()
                                                .addComponent(distance2Cbb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(14, 14, 14))))
        );
        distance2PanelLayout.setVerticalGroup(
                distance2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, distance2PanelLayout.createSequentialGroup()
                                .addComponent(separateurDistance2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(distance2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(departDistance2Lbl)
                                        .addComponent(distance2Cbb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(distance2Cb)
                                .addContainerGap(29, Short.MAX_VALUE))
        );

        optionPanel.add(distance2Panel);

        comparerPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Comparer"));

        pointALbl.setText("Point A:");

        pointBLbl.setText("Point B:");

        pointACbb.setModel(modeleComparerA);

        pointBCbb.setModel(modeleComparerB);

        comparerBoutonGroup.add(culturelRb);
        culturelRb.setText("Culturelle");

        comparerBoutonGroup.add(gastronomiqueRb);
        gastronomiqueRb.setText("Gastronomique");

        comparerBoutonGroup.add(ouvertRb);
        ouvertRb.setText("Ouverte");

        comparerbouton.setText("Comparer");
        comparerbouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comparerBoutonActionPerformed(evt);
            }
        });

        distance2OuPas.setText("2-Distance?");
        distance2OuPas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try{
                    distance2OuPasActionPerformed(evt);
                }catch (NullPointerException ignored){}
            }
        });

        javax.swing.GroupLayout comparerPanelLayout = new javax.swing.GroupLayout(comparerPanel);
        comparerPanel.setLayout(comparerPanelLayout);
        comparerPanelLayout.setHorizontalGroup(
                comparerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(comparerPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(comparerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(culturelRb, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                        .addComponent(pointALbl)
                                        .addComponent(pointACbb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(comparerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(comparerPanelLayout.createSequentialGroup()
                                                .addGap(26, 26, 26)
                                                .addGroup(comparerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(pointBLbl)
                                                        .addComponent(pointBCbb, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(comparerPanelLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(comparerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(comparerbouton)
                                                        .addComponent(distance2OuPas)
                                                        .addGroup(comparerPanelLayout.createSequentialGroup()

                                                                .addComponent(gastronomiqueRb)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(ouvertRb, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))))

                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        comparerPanelLayout.setVerticalGroup(
                comparerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(comparerPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(comparerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(pointALbl)
                                        .addComponent(pointBLbl))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(comparerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(pointACbb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(pointBCbb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)
                                .addGroup(comparerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(culturelRb)
                                        .addComponent(gastronomiqueRb)
                                        .addComponent(ouvertRb))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                                .addComponent(comparerbouton)
                                .addComponent(distance2OuPas))
        );

        legendePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Légende"));
        legendePanel.setPreferredSize(new java.awt.Dimension(330, 312));
        legendePanel.setLayout(new java.awt.GridLayout(4, 3, 10, 0));

        legendeVillePanel.setBackground(java.awt.Color.orange);
        legendeVillePanel.setPreferredSize(new java.awt.Dimension(100, 100));

        javax.swing.GroupLayout legendeVillePanelLayout = new javax.swing.GroupLayout(legendeVillePanel);
        legendeVillePanel.setLayout(legendeVillePanelLayout);
        legendeVillePanelLayout.setHorizontalGroup(
                legendeVillePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 97, Short.MAX_VALUE)
        );
        legendeVillePanelLayout.setVerticalGroup(
                legendeVillePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 33, Short.MAX_VALUE)
        );

        legendePanel.add(legendeVillePanel);

        legendeRestauPanel.setBackground(java.awt.Color.pink);

        javax.swing.GroupLayout legendeRestauPanelLayout = new javax.swing.GroupLayout(legendeRestauPanel);
        legendeRestauPanel.setLayout(legendeRestauPanelLayout);
        legendeRestauPanelLayout.setHorizontalGroup(
                legendeRestauPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 97, Short.MAX_VALUE)
        );
        legendeRestauPanelLayout.setVerticalGroup(
                legendeRestauPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 33, Short.MAX_VALUE)
        );

        legendePanel.add(legendeRestauPanel);

        legendeLoisPanel.setBackground(java.awt.Color.magenta);

        javax.swing.GroupLayout legendeLoisPanelLayout = new javax.swing.GroupLayout(legendeLoisPanel);
        legendeLoisPanel.setLayout(legendeLoisPanelLayout);
        legendeLoisPanelLayout.setHorizontalGroup(
                legendeLoisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 97, Short.MAX_VALUE)
        );
        legendeLoisPanelLayout.setVerticalGroup(
                legendeLoisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 33, Short.MAX_VALUE)
        );

        legendePanel.add(legendeLoisPanel);

        legendeVilleLbl.setText("Villes");
        legendePanel.add(legendeVilleLbl);

        legendeRestaurantLbl.setText("Restaurants");
        legendePanel.add(legendeRestaurantLbl);

        legendeLoisirLbl.setText("Loisirs");
        legendePanel.add(legendeLoisirLbl);

        legendeAutoPanel.setBackground(java.awt.Color.blue);

        javax.swing.GroupLayout legendeAutoPanelLayout = new javax.swing.GroupLayout(legendeAutoPanel);
        legendeAutoPanel.setLayout(legendeAutoPanelLayout);
        legendeAutoPanelLayout.setHorizontalGroup(
                legendeAutoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 97, Short.MAX_VALUE)
        );
        legendeAutoPanelLayout.setVerticalGroup(
                legendeAutoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 33, Short.MAX_VALUE)
        );

        legendePanel.add(legendeAutoPanel);

        legendeDepartPanel.setBackground(java.awt.Color.green);

        javax.swing.GroupLayout legendeDepartPanelLayout = new javax.swing.GroupLayout(legendeDepartPanel);
        legendeDepartPanel.setLayout(legendeDepartPanelLayout);
        legendeDepartPanelLayout.setHorizontalGroup(
                legendeDepartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 97, Short.MAX_VALUE)
        );
        legendeDepartPanelLayout.setVerticalGroup(
                legendeDepartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 33, Short.MAX_VALUE)
        );

        legendePanel.add(legendeDepartPanel);

        legendeNatioPanel.setBackground(java.awt.Color.red);

        javax.swing.GroupLayout legendeNatioPanelLayout = new javax.swing.GroupLayout(legendeNatioPanel);
        legendeNatioPanel.setLayout(legendeNatioPanelLayout);
        legendeNatioPanelLayout.setHorizontalGroup(
                legendeNatioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 97, Short.MAX_VALUE)
        );
        legendeNatioPanelLayout.setVerticalGroup(
                legendeNatioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 33, Short.MAX_VALUE)
        );

        legendePanel.add(legendeNatioPanel);

        legendeAutoLbl.setText("Autoroutes");
        legendePanel.add(legendeAutoLbl);

        legendeDepartLbl.setText("Départementales");
        legendePanel.add(legendeDepartLbl);

        legendeNatioLbl.setText("Nationales");
        legendePanel.add(legendeNatioLbl);

        javax.swing.GroupLayout proprietePanelLayout = new javax.swing.GroupLayout(proprietePanel);
        proprietePanel.setLayout(proprietePanelLayout);
        proprietePanelLayout.setHorizontalGroup(
                proprietePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(proprietePanelLayout.createSequentialGroup()
                                .addGroup(proprietePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(legendePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)
                                        .addComponent(comparerPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(4, 4, 4)
                                        .addComponent(optionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 4, Short.MAX_VALUE))
        );
        proprietePanelLayout.setVerticalGroup(
                proprietePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(proprietePanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(optionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comparerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5 , 5)
                                .addComponent(legendePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(proprietePanel, java.awt.BorderLayout.LINE_START);

        graphicPanel.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout graphicPanelLayout = new javax.swing.GroupLayout(graphicPanel);
        graphicPanel.setLayout(graphicPanelLayout);
        graphicPanelLayout.setHorizontalGroup(
                graphicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 700, Short.MAX_VALUE)
        );
        graphicPanelLayout.setVerticalGroup(
                graphicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 700, Short.MAX_VALUE)
        );

        getContentPane().add(graphicPanel, java.awt.BorderLayout.CENTER);

        fichierMenu.setText("Fichier");

        outilsMenu.setText("Outils");

        ouvrirMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        ouvrirMenuItem.setText("Ouvrir");
        ouvrirMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ouvrirMenuItemActionPerformed(evt);
            }
        });
        fichierMenu.add(ouvrirMenuItem);


        nbrElem.setAccelerator(javax.swing.KeyStroke.getKeyStroke((KeyEvent.VK_E), InputEvent.CTRL_DOWN_MASK));
        nbrElem.setText("Nombre d'éléments");
        nbrElem.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nbrElemActionPerformed(evt);
            }
        });

        outilsMenu.add(nbrElem);
        outilsMenu.add(separateurMenu);

        listerNoeud.setAccelerator(javax.swing.KeyStroke.getKeyStroke((KeyEvent.VK_R), InputEvent.CTRL_DOWN_MASK));
        listerNoeud.setText("Liste des Noeuds");
        listerNoeud.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listerNoeudActionPerformed(evt);
            }
        });

        outilsMenu.add(listerNoeud);

        listerLien.setAccelerator(javax.swing.KeyStroke.getKeyStroke((KeyEvent.VK_T), InputEvent.CTRL_DOWN_MASK));
        listerLien.setText("Liste des Liens");
        listerLien.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listerLienActionPerformed(evt);
            }
        });

        outilsMenu.add(listerLien);

        quitterMenuItem.setText("Quitter");
        quitterMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitterMenuItemActionPerformed(evt);
            }
        });


        fichierMenu.add(quitterMenuItem);


        barreMenu.add(fichierMenu);

        barreMenu.add(outilsMenu);

        setJMenuBar(barreMenu);

        pack();
    }// </editor-fold>

    private void distance2CbbActionPerformed(ActionEvent evt) {
        villeCb.setEnabled(true);
        restauCb.setEnabled(true);
        loisirCb.setEnabled(true);
        autoCb.setEnabled(true);
        natioCb.setEnabled(true);
        departCb.setEnabled(true);
        distance2Cb.setSelected(false);
        distance1Cb.setEnabled(true);
        distance1Cbb.setEnabled(true);
        ArrayList<String> typeAAfficher = new ArrayList<>();
        typeAAfficher.add("V");typeAAfficher.add("R");typeAAfficher.add("L");typeAAfficher.add("A");typeAAfficher.add("N");typeAAfficher.add("D");
        graphicPanel.removeAll();
        Dimension dimension = new Dimension(graphicPanel.getWidth(), graphicPanel.getHeight());
        this.dessin = new Dessin(dimension, listeNoeud,typeAAfficher);
        graphicPanel.setSize(dimension);
        graphicPanel.add(dessin);
        this.pack();
        graphicPanel.repaint();
    }

    private void distance1CbbActionPerformed(ActionEvent evt) {
        villeCb.setEnabled(true);
        restauCb.setEnabled(true);
        loisirCb.setEnabled(true);
        autoCb.setEnabled(true);
        natioCb.setEnabled(true);
        departCb.setEnabled(true);
        distance1Cb.setSelected(false);
        distance2Cb.setEnabled(true);
        distance2Cbb.setEnabled(true);
        ArrayList<String> typeAAfficher = new ArrayList<>();
        typeAAfficher.add("V");typeAAfficher.add("R");typeAAfficher.add("L");typeAAfficher.add("A");typeAAfficher.add("N");typeAAfficher.add("D");
        graphicPanel.removeAll();
        Dimension dimension = new Dimension(graphicPanel.getWidth(), graphicPanel.getHeight());
        this.dessin = new Dessin(dimension, listeNoeud,typeAAfficher);
        graphicPanel.setSize(dimension);
        graphicPanel.add(dessin);
        this.pack();
        graphicPanel.repaint();
    }

    private void affichageCbActionPerformed(java.awt.event.ActionEvent evt) {
        if(villeCb.isSelected() && loisirCb.isSelected() && restauCb.isSelected() && autoCb.isSelected() && natioCb.isSelected() && departCb.isSelected()){
            distance1Cb.setEnabled(true);
            distance2Cb.setEnabled(true);
        } else {
            distance1Cb.setEnabled(false);
            distance2Cb.setEnabled(false);
        }
        affichageCheckBoxMenu();
    }

    private void distance2CbActionPerformed(java.awt.event.ActionEvent evt) {
        if(distance2Cb.isSelected()){
            villeCb.setEnabled(false);
            restauCb.setEnabled(false);
            loisirCb.setEnabled(false);
            autoCb.setEnabled(false);
            natioCb.setEnabled(false);
            departCb.setEnabled(false);
            distance1Cb.setEnabled(false);
            distance1Cbb.setEnabled(false);
            String lieu = distance2Cbb.getSelectedItem().toString();
            ArrayList<String> distance2 = fonctionnalite.distance1(lieu);
            distance2.addAll(fonctionnalite.distance2(lieu));
            LinkedList<TNoeud> listeAAfficher = new LinkedList<>(verifier(distance2));
            ArrayList<String> typeAAfficher = new ArrayList<>();
            typeAAfficher.add("V");typeAAfficher.add("R");typeAAfficher.add("L");typeAAfficher.add("A");typeAAfficher.add("N");typeAAfficher.add("D");
            graphicPanel.removeAll();
            Dimension dimension = new Dimension(graphicPanel.getWidth(), graphicPanel.getHeight());
            this.dessin = new Dessin(dimension,listeAAfficher,typeAAfficher);
            graphicPanel.setSize(dimension);
            graphicPanel.add(dessin);
            this.pack();
            graphicPanel.repaint();
        }else{
            villeCb.setEnabled(true);
            restauCb.setEnabled(true);
            loisirCb.setEnabled(true);
            autoCb.setEnabled(true);
            natioCb.setEnabled(true);
            departCb.setEnabled(true);
            distance1Cb.setEnabled(true);
            distance1Cbb.setEnabled(true);
            ArrayList<String> typeAAfficher = new ArrayList<>();
            typeAAfficher.add("V");typeAAfficher.add("R");typeAAfficher.add("L");typeAAfficher.add("A");typeAAfficher.add("N");typeAAfficher.add("D");
            graphicPanel.removeAll();
            Dimension dimension = new Dimension(graphicPanel.getWidth(), graphicPanel.getHeight());
            this.dessin = new Dessin(dimension, listeNoeud,typeAAfficher);
            graphicPanel.setSize(dimension);
            graphicPanel.add(dessin);
            this.pack();
            graphicPanel.repaint();
        }
    }

    private void distance1CbActionPerformed(java.awt.event.ActionEvent evt) {
        if (distance1Cb.isSelected()) {
            villeCb.setEnabled(false);
            restauCb.setEnabled(false);
            loisirCb.setEnabled(false);
            autoCb.setEnabled(false);
            natioCb.setEnabled(false);
            departCb.setEnabled(false);
            distance2Cb.setEnabled(false);
            distance2Cbb.setEnabled(false);
            String lieu = distance1Cbb.getSelectedItem().toString();
            LinkedList<TNoeud> listeAAfficher = new LinkedList<>(verifier(fonctionnalite.distance1(lieu)));
            ArrayList<String> typeAAfficher = new ArrayList<>();
            typeAAfficher.add("V");
            typeAAfficher.add("R");
            typeAAfficher.add("L");
            typeAAfficher.add("A");
            typeAAfficher.add("N");
            typeAAfficher.add("D");
            graphicPanel.removeAll();
            Dimension dimension = new Dimension(graphicPanel.getWidth(), graphicPanel.getHeight());
            this.dessin = new Dessin(dimension, listeAAfficher, typeAAfficher);
            graphicPanel.setSize(dimension);
            graphicPanel.add(dessin);
            this.pack();
            graphicPanel.repaint();
        } else {
            villeCb.setEnabled(true);
            restauCb.setEnabled(true);
            loisirCb.setEnabled(true);
            autoCb.setEnabled(true);
            natioCb.setEnabled(true);
            departCb.setEnabled(true);
            distance2Cb.setEnabled(true);
            distance2Cbb.setEnabled(true);
            ArrayList<String> typeAAfficher = new ArrayList<>();
            typeAAfficher.add("V");
            typeAAfficher.add("R");
            typeAAfficher.add("L");
            typeAAfficher.add("A");
            typeAAfficher.add("N");
            typeAAfficher.add("D");
            graphicPanel.removeAll();
            Dimension dimension = new Dimension(graphicPanel.getWidth(), graphicPanel.getHeight());
            this.dessin = new Dessin(dimension, listeNoeud, typeAAfficher);
            graphicPanel.setSize(dimension);
            graphicPanel.add(dessin);
            this.pack();
            graphicPanel.repaint();
        }
    }

    private void quitterMenuItemActionPerformed(java.awt.event.ActionEvent evt) {
        System.exit(0);
    }

    private void listerNoeudActionPerformed(ActionEvent evt) {
        try {
            JOptionPane.showMessageDialog(null, "Liste des Noeuds: \n\r" +
                    fonctionnalite.listerNoeud().toString().replace("[", "").replace("]", "").replace(",", ""),"Liste des noeuds", JOptionPane.PLAIN_MESSAGE);
        }catch(NullPointerException exception){
            JOptionPane.showMessageDialog(null,"Aucun fichier ouvert", "Erreur", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void listerLienActionPerformed(ActionEvent evt) {
        try{
        JOptionPane.showMessageDialog(null, "Liste des Noeuds: \n\r" +
                fonctionnalite.listerLien().toString().replace("[", "").replace("]", "").replace(",",""), "Liste des liens", JOptionPane.PLAIN_MESSAGE);
        }catch(NullPointerException exception){
            JOptionPane.showMessageDialog(null,"Aucun fichier ouvert", "Erreur", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void nbrElemActionPerformed(java.awt.event.ActionEvent evt){
        try {
            int nbrVille = fonctionnalite.afficherVille().size();
            int nbrLoisirs = fonctionnalite.afficherLoisir().size();
            int nbrRestau = fonctionnalite.afficherRestaurant().size();
            int totNoeud = nbrLoisirs + nbrRestau + nbrVille;
            int nbrAuto = fonctionnalite.afficherAutoroute().size();
            int nbrNatio = fonctionnalite.afficherNational().size();
            int nbrDepart = fonctionnalite.afficherDepart().size();
            int totLiens = nbrAuto + nbrDepart + nbrNatio;
            JOptionPane.showMessageDialog(null, "Le fichier se compose de:  \n\r"
                    + nbrVille + " Villes \n\r"
                    + nbrRestau + " Restaurant \n\r"
                    + nbrLoisirs + " Loisirs \n\r"
                    + "Pour un total de " + totNoeud + " noeuds \n\r"
                    + "Ainsi que de: \n\r"
                    + nbrAuto + " Autoroutes \n\r "
                    + nbrDepart + " Départementales \n\r"
                    + nbrNatio + " Nationales \n\r"
                    + "Pour un total de " + totLiens + " liens ", "Nombre d'éléments", JOptionPane.INFORMATION_MESSAGE);
        }catch(NullPointerException exception){
            JOptionPane.showMessageDialog(null,"Aucun fichier ouvert", "Erreur", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void ouvrirMenuItemActionPerformed(java.awt.event.ActionEvent evt) {
        File file = null;
        JFileChooser chooser = new JFileChooser();
        chooser.addChoosableFileFilter(new FileNameExtensionFilter("Fichier CSV (*csv)", "csv"));
        chooser.addChoosableFileFilter(new FileNameExtensionFilter("Fichier TXT (*txt)", "txt"));
        chooser.setApproveButtonText("Ouvrir");
        chooser.setDialogTitle("Ouvrir");
        chooser.setDialogType(JFileChooser.OPEN_DIALOG);
        chooser.setMultiSelectionEnabled(false);
        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        int returnVal = chooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = chooser.getSelectedFile();
            Entree entree = new Entree(file);
            this.listeNoeud = entree.getListeNoeuds();
            modeleDistance1.removeAllElements();
            modeleDistance2.removeAllElements();
            modeleComparerA.removeAllElements();
            modeleComparerB.removeAllElements();
            for (TNoeud tnoeud : listeNoeud) {
                modeleDistance1.addElement(tnoeud.getNom());
                modeleDistance2.addElement(tnoeud.getNom());
                modeleComparerA.addElement(tnoeud.getNom());
                modeleComparerB.addElement(tnoeud.getNom());
            }
            fonctionnalite = new Fonctions(listeNoeud);
            ArrayList<String> typeAAfficher = new ArrayList<>();
            typeAAfficher.add("V");typeAAfficher.add("R");typeAAfficher.add("L");typeAAfficher.add("A");typeAAfficher.add("N");typeAAfficher.add("D");
            graphicPanel.removeAll();
            Dimension dimension = new Dimension(graphicPanel.getWidth(), graphicPanel.getHeight());
            this.dessin = new Dessin(dimension, listeNoeud,typeAAfficher);
            graphicPanel.setSize(dimension);
            graphicPanel.add(dessin);
            this.pack();
            graphicPanel.repaint();
        }
    }

    public void comparerBoutonActionPerformed(ActionEvent e){
        try {
            String ville_a = pointACbb.getSelectedItem().toString();
            String ville_b = pointBCbb.getSelectedItem().toString();
            if (ville_a.equals(ville_b)) {
                JOptionPane.showMessageDialog(null, "Les deux villes choisies sont les même", "Erreur", JOptionPane.ERROR_MESSAGE);
            } else {
                if (culturelRb.isSelected()) {
                    if (fonctionnalite.plusMoinsCulturelle(ville_a, ville_b) == 0) {
                        JOptionPane.showMessageDialog(null, ville_a + " est plus culturelle que " + ville_b, "Comparaison", JOptionPane.INFORMATION_MESSAGE);
                    } else if(fonctionnalite.plusMoinsCulturelle(ville_a, ville_b) == 1){
                        JOptionPane.showMessageDialog(null, ville_b + " est plus culturelle que " + ville_a, "Comparaison", JOptionPane.INFORMATION_MESSAGE);
                    }
                    else if(fonctionnalite.plusMoinsCulturelle(ville_a, ville_b) == 1){
                        JOptionPane.showMessageDialog(null, "Elles sont égales", "Comparaison", JOptionPane.INFORMATION_MESSAGE);
                    }

                } else if (gastronomiqueRb.isSelected()) {
                    if (fonctionnalite.plusMoinsGastro(ville_a, ville_b) == 0) {
                        JOptionPane.showMessageDialog(null, ville_a + " est plus gastronomique que " + ville_b, "Comparaison", JOptionPane.INFORMATION_MESSAGE);
                    } else if(fonctionnalite.plusMoinsGastro(ville_a, ville_b) == 1) {
                        JOptionPane.showMessageDialog(null, ville_b + " est plus gastronomique que " + ville_a, "Comparaison", JOptionPane.INFORMATION_MESSAGE);
                    } else if (fonctionnalite.plusMoinsGastro(ville_a, ville_b) == 2){
                        JOptionPane.showMessageDialog(null, "Elles sont égales", "Comparaison", JOptionPane.INFORMATION_MESSAGE);
                    }
                } else {
                    if (fonctionnalite.plusMoinsOuverte(ville_a, ville_b) == 0) {
                        JOptionPane.showMessageDialog(null, ville_a + " est plus ouverte que " + ville_b, "Comparaison", JOptionPane.INFORMATION_MESSAGE);
                    } else if(fonctionnalite.plusMoinsOuverte(ville_a, ville_b) == 1){
                        JOptionPane.showMessageDialog(null, ville_b + " est plus ouverte que " + ville_a, "Comparaison", JOptionPane.INFORMATION_MESSAGE);
                    }
                    else if(fonctionnalite.plusMoinsOuverte(ville_a, ville_b) == 2){
                        JOptionPane.showMessageDialog(null, "Elles sont égales", "Comparaison", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            }
        } catch (NullPointerException exception){
            JOptionPane.showMessageDialog(null,"Aucun fichier ouvert", "Erreur", JOptionPane.WARNING_MESSAGE);
        }
    }

    public void distance2OuPasActionPerformed(ActionEvent e){
        try {
            String ville_a = pointACbb.getSelectedItem().toString();
            String ville_b = pointBCbb.getSelectedItem().toString();
            if (ville_a.equals(ville_b)) {
                JOptionPane.showMessageDialog(null, "Les deux villes choisies sont les même", "Erreur", JOptionPane.ERROR_MESSAGE);
            } else {
                if (fonctionnalite.distance2OuPas(ville_a, ville_b)) {
                    JOptionPane.showMessageDialog(null, ville_a + " est bien à deux distance ou moins de " + ville_b, "Deux distance ?", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, ville_a + " est à plus de deux distance de " + ville_b, "Deux distance ?", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }catch (NullPointerException exception){
            JOptionPane.showMessageDialog(null,"Aucun fichier ouvert", "Erreur", JOptionPane.WARNING_MESSAGE);
        }
    }

    DefaultComboBoxModel modeleDistance1 = new DefaultComboBoxModel();
    DefaultComboBoxModel modeleDistance2 = new DefaultComboBoxModel();
    DefaultComboBoxModel modeleComparerA = new DefaultComboBoxModel();
    DefaultComboBoxModel modeleComparerB = new DefaultComboBoxModel();



    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | IllegalAccessException | InstantiationException | UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ihm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ihm().setVisible(true);
            }

        });
    }

    private LinkedList<TNoeud> verifier(ArrayList listeDeString){
        LinkedList<TNoeud> listeAffichable = new LinkedList<>();
        for (TNoeud noeud : listeNoeud) {
            if (listeDeString.contains(noeud.getNom())) {
                listeAffichable.add(noeud);
            }
        }
        return listeAffichable;
    }

    public void affichageCheckBoxMenu(){

        LinkedList<TNoeud> listeAAfficher = new LinkedList<>();
        ArrayList<String > typeAAfficher = new ArrayList<>();

        if(villeCb.isSelected()){
            listeAAfficher.addAll(verifier(fonctionnalite.afficherVille()));
            typeAAfficher.add("V");
        }
        if (loisirCb.isSelected()){
            listeAAfficher.addAll(verifier(fonctionnalite.afficherLoisir()));
            typeAAfficher.add("L");
        }
        if (restauCb.isSelected()){
            listeAAfficher.addAll(verifier(fonctionnalite.afficherRestaurant()));
            typeAAfficher.add("R");
        }
        if (departCb.isSelected()){
            typeAAfficher.add("D");
        }
        if (natioCb.isSelected()){
            typeAAfficher.add("N");
        }
        if (autoCb.isSelected()){
            typeAAfficher.add("A");
        }

        graphicPanel.removeAll();
        Dimension dimension = new Dimension(graphicPanel.getWidth(), graphicPanel.getHeight());
        this.dessin = new Dessin(dimension,listeAAfficher,typeAAfficher);
        graphicPanel.setSize(dimension);
        graphicPanel.add(dessin);
        this.pack();
        graphicPanel.repaint();
    }


    // Variables declaration - do not modify
    private javax.swing.JPanel distance1Panel;
    private javax.swing.JPanel distance2Panel;
    private javax.swing.JCheckBox autoCb;
    private javax.swing.JCheckBox distance1Cb;
    private javax.swing.JCheckBox distance2Cb;
    private javax.swing.JComboBox<String> distance1Cbb;
    private javax.swing.JComboBox<String> distance2Cbb;
    private javax.swing.ButtonGroup comparerBoutonGroup;
    private javax.swing.JCheckBox departCb;
    private javax.swing.JPanel graphicPanel;
    private javax.swing.JButton comparerbouton;
    private javax.swing.JComboBox<String> pointACbb;
    private javax.swing.JComboBox<String> pointBCbb;
    private javax.swing.JLabel afficherLbl;
    private javax.swing.JLabel pointALbl;
    private javax.swing.JLabel distance1Lbl;
    private javax.swing.JLabel distance2Lbl;
    private javax.swing.JLabel departDistance1Lbl;
    private javax.swing.JLabel departDistance2Lbl;
    private javax.swing.JLabel pointBLbl;
    private javax.swing.JMenu fichierMenu;

    private javax.swing.JMenu outilsMenu;
    private javax.swing.JMenuBar barreMenu;
    private javax.swing.JPanel comparerPanel;
    private javax.swing.JRadioButton culturelRb;
    private javax.swing.JRadioButton gastronomiqueRb;
    private javax.swing.JRadioButton ouvertRb;
    private javax.swing.JPopupMenu.Separator separateurMenu;
    private javax.swing.JSeparator separateurDistance2;
    private javax.swing.JSeparator separateurDistance1;
    private javax.swing.JCheckBox loisirCb;
    private javax.swing.JCheckBox natioCb;
    private javax.swing.JPanel optionPanel;
    private javax.swing.JMenuItem ouvrirMenuItem;
    private javax.swing.JPanel proprietePanel;
    private javax.swing.JMenuItem quitterMenuItem;
    private javax.swing.JCheckBox restauCb;
    private javax.swing.JPanel typeNoeudPanel;
    private javax.swing.JCheckBox villeCb;
    private javax.swing.JPanel legendeAutoPanel;
    private javax.swing.JPanel legendeDepartPanel;
    private javax.swing.JPanel legendeLoisPanel;
    private javax.swing.JPanel legendeNatioPanel;
    private javax.swing.JPanel legendePanel;
    private javax.swing.JPanel legendeRestauPanel;
    private javax.swing.JPanel legendeVillePanel;
    private javax.swing.JLabel legendeLoisirLbl;
    private javax.swing.JLabel legendeAutoLbl;
    private javax.swing.JLabel legendeDepartLbl;
    private javax.swing.JLabel legendeNatioLbl;
    private javax.swing.JLabel legendeVilleLbl;
    private javax.swing.JLabel legendeRestaurantLbl;
    private javax.swing.JMenuItem nbrElem;
    private javax.swing.JMenuItem listerNoeud;
    private javax.swing.JMenuItem listerLien;
    private javax.swing.JButton distance2OuPas;
    // End of variables declaration
}

